@using SimpleLibrarySystem.Data.Services
@using SimpleLibrarySystem.Data.Tables
@inject CustomerManagementService CustomerService
@inject IStringLocalizer<SimpleLibrarySystem.Resources.Translation> Localizer

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog modal-dialog-centered" style="max-width: 1000px;" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Localizer["RemoveCustomer"]</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="() => Close()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @Localizer["RemoveCustomerConfirmationInfo"]
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="() => Close()">@Localizer["Close"]</button>
                <button type="button" class="btn btn-danger" @onclick="() => RemoveBook()">@Localizer["Remove"]</button>
            </div>
        </div>
    </div>
</div>



@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}

@code {

    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    public void Open(Customer customer)
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        currentCustomer = customer;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }

    public bool IsClosed()
    {
        return isSaved;
    }

    public bool isSaved = false;

    private Customer currentCustomer;

    private async Task RemoveBook()
    {
        isSaved = await CustomerService.RemoveCustomerAsync(currentCustomer);
        Close();
    }
}
